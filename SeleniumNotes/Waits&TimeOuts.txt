package seleniumPerticular;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class WaitsAndTimeouts extends BaseClass {

	public static void main(String[] args) throws InterruptedException {
		String envProp = Constants.ENVIRONMENT_PROPERTIES;
		String browserName = Parameterization.readProperty(envProp, "browser");
		WebDriver driver = intialisation(browserName);
		
		//***************TimeOuts**********************************
		// To set custom Page load timeout --> time boundary to load elements on page
		// If not satisfied --> throws TimeOutException
//		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(2));
		driver.get("https://www.facebook.com/");
		
		// Script timeout for JavaScript async calls
//		driver.manage().timeouts().scriptTimeout(Duration.ofSeconds(3));
		
		//***************Waits*********************
		//1. implicit wait
//		SeleniumWaits.implicitWait(driver, Duration.ofSeconds(3));
//		WebElement userName = driver.findElement(By.name("email"));
		
		//2. explicit wait
		WebElement createNewAccount = driver.findElement(By.xpath("//a[contains(@data-testid,'registration')]"));
		createNewAccount.click();
		
//		Thread.sleep(2000);     //System wait --> prohibited
//		WebElement firstName = driver.findElement(By.name("firstname"));
		
		//2.a FluentWait
		SeleniumWaits.fluentSendKey(driver, "//*[@name='firstname']", "abcde");          // fluent wait method--> action specific
		
//		WebElement ele = SeleniumWaits.waitForElement(driver, "//*[@name='firstname']");  // fluent wait method --> element specific 
//		ele.sendKeys("abcde");
		
		//********To quit browser*********
		driver.quit();

	}

}
------------------------------------------------------------------------------------------------------------------------
package seleniumPerticular;

import java.time.Duration;
import java.util.NoSuchElementException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriver.Timeouts;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.FluentWait;

public class SeleniumWaits {
	
	// 1. Implicit wait= applicable to all elements on the web-page
	public static Timeouts implicitWait(WebDriver driver, Duration duration) {
		Timeouts iWait = driver.manage().timeouts().implicitlyWait(duration);
		return iWait;
	}
	
	//2.a.  Explicit wait --> Fluent wait = applicable only to specific webelement
	public static void fluentSendKey(WebDriver driver, String xpath, String str) {
		waitForElement(driver, xpath).sendKeys(str);	
	}
	
	public static void fluentClick(WebDriver driver, String xpath) {
		waitForElement(driver, xpath).click();
	}
	
	public static void fluentSubmit(WebDriver driver, String xpath) {

		waitForElement(driver, xpath).submit();
	}
	
	public static boolean fluentIsEnabled(WebDriver driver, String xpath) {
		return waitForElement(driver, xpath).isEnabled();
	}
	
	public static WebElement waitForElement(WebDriver driver, String xpath) {
		FluentWait wait = new FluentWait(driver);
		wait.withTimeout(Duration.ofSeconds(5));  //maximum timeOut
		wait.pollingEvery(Duration.ofMillis(10)); //polling time
		wait.ignoring(NoSuchElementException.class); // hold back exception maximum up to timeOut
		wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(xpath)));
		WebElement ele = driver.findElement(By.xpath(xpath));
		return ele;
	}

}
---------------------------------------------------------------------------------------------------------
package seleniumPerticular;

public class Constants {
	public static final String ENVIRONMENT_PROPERTIES = "<path of properties file>";
	public static final String TEST_DATA="<path of test data file>";
}

--------------------------------------------------------------------------------------------------------
*********Create seperate Environment.properties at any location and put the following values*****************

browser=edge
url=https://www.facebook.com

---------------------------------------------------------------------